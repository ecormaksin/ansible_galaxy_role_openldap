#SPDX-License-Identifier: MIT-0
---
# tasks file for ansible_galaxy_role_openldap

# https://www.openldap.org/doc/admin26/quickstart.html

- name: "OpenLDAP | Install GPG package"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  apt:
    pkg:
      - gpg
    state: present
    update_cache: yes

- name: "OpenLDAP | Download GPG Signature file"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.get_url:
    url: https://www.openldap.org/software/download/OpenLDAP/gpg-pubkey.txt
    dest: /tmp/7F67D5FD1CE1CBCE

- name: "OpenLDAP | Import and trust GPG public key"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.shell:
    cmd: |
      gpg --import "/tmp/7F67D5FD1CE1CBCE"
      echo "$( \
        gpg --list-keys \
        | grep "7F67D5FD1CE1CBCE" | tail -1 \
        | tr -d '[:space:]' \
      ):6:" | gpg --import-ownertrust

- name: "OpenLDAP | Download source code"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.get_url:
    url: https://www.openldap.org/software/download/OpenLDAP/openldap-release/openldap-2.6.10.tgz
    dest: /usr/local/src

- name: "OpenLDAP | Download signature file"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.get_url:
    url: https://www.openldap.org/software/download/OpenLDAP/openldap-release/openldap-2.6.10.tgz.asc
    dest: /tmp

- name: "OpenLDAP | Verify source code by GPG"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.command: gpg --verify /tmp/openldap-2.6.10.tgz.asc /usr/local/src/openldap-2.6.10.tgz
  register: openldap_gpg_verify

- name: "OpenLDAP | Succeeded to verify"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.debug:
    msg: "GPG検証が成功しました。"
  when: openldap_gpg_verify.rc == 0

- name: "OpenLDAP | Failed to verify"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.debug:
    msg: "GPG検証が失敗しました。"
  when: openldap_gpg_verify.rc != 0

- name: "OpenLDAP | Unpack source code"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  unarchive:
    remote_src: yes
    src: /usr/local/src/openldap-2.6.10.tgz
    dest: /usr/local/src

- name: "OpenLDAP | Install required packeges for build"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.apt:
    name:
      - build-essential
    state: present

- name: "OpenLDAP | Build source code"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.shell:
    cmd: |
      ./configure && \
      make depend && \
      make && \
      make install
    chdir: /usr/local/src/openldap-2.6.10

- name: "OpenLDAP | Edit the configuration file"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.replace:
    path: /usr/local/etc/openldap/slapd.ldif
    regexp: "dc=my-domain,dc=com"
    replace: "{{ openldap.domain_component.full }}"

- name: "OpenLDAP | Create directories"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: "700"
  with_items:
    - /usr/local/etc/slapd.d
    - /usr/local/var/openldap-data

- name: "OpenLDAP | Import the configuration database"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.shell:
    cmd: |
      /usr/local/sbin/slapadd -n 0 -F /usr/local/etc/slapd.d -l /usr/local/etc/openldap/slapd.ldif

- name: "OpenLDAP | Start SLAPD"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.shell:
    cmd: |
      /usr/local/libexec/slapd -F /usr/local/etc/slapd.d
